{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAGQ,EACF,EAJA,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAsB,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAG9C,EAAY,AAYX,CAZe,CAAC,EAAE,CAAC,aAAa,CACnC,EAAa,EAAE,CAEnB,EAAa,AASN,EATW,IAAI,CACpB,SAAC,CAAA,CAAG,CADN,EAEI,MAAA,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,IAC3C,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,G,GAE/C,EAAU,SAAS,CAAG,GACtB,EAAW,OAAO,CAAC,SAAC,CAApB,EAAiC,OAAA,EAAU,WAAW,CAAC,E,GAgBzD,AAXA,SAAsB,CAAI,EACxB,EAAK,GAAG,CAAC,SAAC,CAAV,EACE,MAAO,CACL,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,CACF,EACF,EAEa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listOfEmployees = _to_consumable_array(document.querySelectorAll(\"ul li\"));\nfunction sortList(list) {\n    var ulElement = list[0].parentElement;\n    var sortedList = [];\n    sortedList = list.sort(function(a, b) {\n        return +b.dataset.salary.slice(1).split(\",\").join(\"\") - +a.dataset.salary.slice(1).split(\",\").join(\"\");\n    });\n    ulElement.innerHTML = \"\";\n    sortedList.forEach(function(employee) {\n        return ulElement.appendChild(employee);\n    });\n}\nsortList(listOfEmployees);\nfunction getEmployees(list) {\n    list.map(function(employee) {\n        return {\n            name: employee.textContent.trim(),\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n}\ngetEmployees(listOfEmployees);\n\n//# sourceMappingURL=index.80f965dd.js.map\n","'use strict';\n\nconst listOfEmployees = [...document.querySelectorAll('ul li')];\n\nfunction sortList(list) {\n  const ulElement = list[0].parentElement;\n  let sortedList = [];\n\n  sortedList = list.sort(\n    (a, b) =>\n      +b.dataset.salary.slice(1).split(',').join('') -\n      +a.dataset.salary.slice(1).split(',').join(''),\n  );\n  ulElement.innerHTML = '';\n  sortedList.forEach((employee) => ulElement.appendChild(employee));\n}\n\nsortList(listOfEmployees);\n\nfunction getEmployees(list) {\n  list.map((employee) => {\n    return {\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n}\n\ngetEmployees(listOfEmployees);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","ulElement","sortedList","listOfEmployees","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","list","parentElement","sort","a","b","dataset","salary","split","join","innerHTML","forEach","employee","appendChild","getEmployees","map","textContent","trim","position","age"],"version":3,"file":"index.80f965dd.js.map"}